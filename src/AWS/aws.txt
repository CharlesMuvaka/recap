                            Amazon Relational Database
- It is a database management service that sets up and operates a relational database in the cloud.
- Amazon Use cases
    1. Hoisting web and mobile applications
    2. Ecommerce applications hoisting
    3. Mobile and online games hoisting
- It saves the user time to think about database management and focus solely on his applications.

        Database Instance.
- It is an isolated database environment that runs on the cloud.
- It is the basic building block of Amazon relational database.
- Can contain multiple created user databases.
- These databases can be accessed using the same tools used to access the database.
- The resources of the DB instance are determined from its instance class(The CPU and memory attributes).
- The type of storage is determined from the type of disk.

    NOTE: The database instance and the storage type differ in performance and cost to ensure the user
        customise the database based on his requirements.

        - Before you select a DB instance you must select the database engine that you will use.
        - Amazon RDS currently supports six Database engines
                1. PostGreSql
                2. MySql
                3. Aurora
                4. Microsoft SQL server
                5. MariaDb
                6. Oracle

        Backing up Data
- Since it's a fully managed service, RDS automatically performs periodically back up of the DB instance.
- The entire instance is backed up in a storage volume snapshot during a specified backup window.
- It is retained according to a specified backup retention period.
- The first snapshot of the DB instance contains its full data.
- The subsequent snapshots are incremental and only contain data that has changed since the most recent snapshot.

    NOTE: You can also back up the instances manually by creating a snapshot.

    Creating a Database Instance
- The easiest way to create a DB instance is using the AWS management Console.
- It provides two options
        1. The Easy create method - Can be enabled or disabled
        2. The Standard Create.

  NOTE: When you use the easy create method,
        1. You specify the database engine.
        2. Configuration options are based on Amazon best practices.
        3. The size of the Instance
        4. An identifier to the instance.

    - When you choose the standard create method, you determine your own configurations.


    Creation Steps
    1. Choose the create method to use
    2. Select the database engine to use.

    Replication and High Availability of Amazon RDS

- You can create a database instance with high availability using multi A-Z deployment.
- This configuration creates a standby copy of the database instance in a different availability zone but in the same
    VPC(virtual Private Cloud)
- After you make the initial full copy, transactions are synchronously replicated in the standby copy.
    Benefits.
     - Availability of data during planned season maintenance.
     - Protect your database against failures or disruptions of availability zones.

     NOTE: When the primary instance fails, Amazon RDS automatically brings the StandBy database online as the primary instance.
           - Applications requests are redirected to this instance using the Amazon DNS system endpoint.
           - There is no need to change the application code and no data loss is encountered due to the synchronous replication.

     Amazon RDS Read replicas and Scaling.
- Amazon RDS also offers the ability to create read replicas of your database instance.
- Updates of the source DB instance are synchronously replicated to the read replica instances.
- You can redirect certain responses to the replicas to reduce Load in your source DB instance.
- You can also use the read replicas to scale out beyond the capacity constraints of a single DB instance for heavy work loads.
- They can also be promoted to become the source DB, though this is done manually.
- Read replicas can be created in different regions from the primary DB instance. Applications in the same geographical region
    can be redirected to get data from this read replicas.
    - This helps satisfy Disaster recovery requirements and also reduce latency(delays before data transfer begins).

    NOTE: You can also increase the Database instance capacity by changing its instance class or its storage capacity.
         - Changing the instance class by increasing the CPU or its memory allocation.
            - You will incur downtime while changing the instance class.
         - Increasing the storage capacity by modifying the allocated storage. No downtime incurred

         AURORA DATABASE ENGINE.
- It is a relational database engine.
- A database engine is a service for storing, processing and securing data.

         Benefits of Aurora
            1. Uses the same code tools as MySql and postgreSql.
            2. It includes a high performance subsystem.
            3. Its MySql compatible and PostgreSql database compatible engine are customized to take advantage of the
                fast distributed storage.
            4. Contains clusters that contain one or more DB instances and a cluster volume that manages data for the DB
                instances.

         Aurora DB clusters
- They contain one or more DB instances with a cluster volume that manages data in these DB instances.
- An aurora cluster volume is a virtual database storage volume that spans across different availability zones. Each
    availability zone contains a copy of the DB cluster data.

        Composition
- A cluster is comprised of:
        1. Primary DB instance - This is the main instance of the database and it allows read and write operations
                                in the database.
        2. Aurora Read replicas - This is a copy of the main DB instance and usually reads from the same storage as the
                                primary DB instance.
                SUMMARY.
 - A DB instance is an isolated database environment that runs in the cloud.

