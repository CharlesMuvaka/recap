                        INTRODUCTION TO LINUX
 - Linux is an open source operating system(provides the source code of the operating system functionality).
    Linux Components
    1. Kernel -  A computer program at the core of the operating system that has complete control of
                everything in the operating system.
    2.Daemons - This is a computer program that runs as a back-ground processes
    3.Configuration files - Special type of files that store the initial settings or values of a computer
                            program.
                           - Use a common type of extension .conf, .cnf
    4. Applications -  A program aimed at performing a specific task.
    5. Data files - Contains information created by the user.
                   - They usually have a unique identifier.

                   LINUX USER_INTERFACE
    - One can interact with the operating system in two ways.
    1. Using Graphical User Interface -
    2. Using the Command-Line Interface - Interaction occurs through the shell(- a program that
        lets you type commands directly to the kernel)
        - Each shell has its own syntax and a way of formatting commands.
        Types
        1. The bash shell - The default shell for most linux operating systems
        2. The sh shell - The original shell for the unix Operating system( - operating system that linux
                        is built on.)
        3. The Ksh shell - The kornshell a common type of unix shell

                    LINUX DISTRIBUTIONS
       - A distro is a packaged version of linux ready to be used.
       1. Ubuntu
       2. KAli linux
       3. Fedora
       4. debian
       5. Red Hat
       6. Amazon Linux 2
                    CONNECTING TO A REMOTE SERVER
       - A secure shell is needed to connect to a remote server.
       - An SSH is a network protocol that enables a user to securely connect to another computer.
       - An ssh client is required to use an SSH.
       - Linux gives you access to the SSH client via the terminal.
       - SSH initiates connection using port 22.

       NOTE: Every Linux distribution instance comes in with a default user. E.g the Amazon Linux 2
            distro comes with an ec2 - default user.
            - To connect to this instance you need a private key that is automatically generated for you.

            LINUX LOGIN WORK FLOW
      - During the installation process, the user is prompted to create a default user(The root user).
      - The name should always be in lower case and is usually stored in the etc/passwd file.
      - A password is also prompted which is stored in the etc/shadow file.

            LINUX COMMAND PROMPT
      - Bash is the default shell for linux distros, it provides a command prompt - A text interface
        that enables a user to type commands directly to the kernel.
      - on init, the shell displays the user and the machine he is working on [user@computerName].

      - Most linux commands are case-sensitive and follow a common convention
       [command] [option] [argument]
      - The command is the instruction being executed on the kernel.
      - option is additional information on the command
      - argument is what the command is working on.

            COMMON USEFUL COMMANDS
      - whoami - prints out the current user in the machine.
      - id - command prints out the current id of the user and group id the user is involved in.
      - hostname - used to display or set the name of the system the user is working on.
      - uptime - prints out the duration the system has been on since the last boot.
      - date - prints out the current date
      - cal - prints a simple calendar indicating the month we are currently at
      - clear - used to clear the terminal screen
      - cat - used to read the contents of a file.
      - echo - used to print text on the terminal console.
      - touch - used to create a file inside a directory
      - history - prints out the list of commands that the user has typed.
            Hint: You can type ctrl T to search for a command
      - mkdir - creates a directory.
      - cd - changes the directory that the user is in(cd .. - moves one step below your current directory
              cd muvaka - enters into a directory known as muvaka,
              cd - changes to the root directory of the user.)
      - tail - prints out the last 10 lines of a file( takes in -n option that can be used to
               indicate the number of lines you'd want to print. E.g tail -n 5 /etc/passwd -
               prints out the last five lines in the indicated folder.)
      - head - prints out the first 10 lines of a file( takes in -n option just as the tail command does.)
      - grep - Used to search for an existing text in a file.
      - passwd - used to change the password of a user.
      - !! prints the last used command

            USER ACCOUNTS
      - The etc/passwd file stores all the users present in the system.
      - The users are stored using a common convention separated by a colon.
        Starts with the username: EncryptedPassword: userID: GroupId: HomeDirectory: DefaultShell

        Default user accounts.
        - Created during the installation process and the user is given full administration privileges.

        Creating users
        - The useradd Command creates a new user and stores the name as usual i /etc/passwd file.
        - The command can take in several options.
            1. -c "adds a comment/description about the user - Supposed to specify the users full name for clarity"
            2. -d "creates a home directory path for the user."
            3. -e "sets the expiration date for the user"
        Example:
            useradd -c "charles-muvaka" -d "/home/charles-muvaka" -e "2024/1/1" muvaka - creates a user with
                    fullname the root directory an expiratin date named muvaka

        Modifying users
        - The usermod command is used to modify an existing user.
        - Takes in options by default to specify what to be changed.
            1. -c "modify the full name of the user or the comment assigned to the user."
            2. -e "modifies the expiration date assigned to the user."

        Example:
            usermod -c "charles-muvaka-kata" -e "2025/1/1" muvaka - modifies the full name and expiration date of muvaka.

       Deleting Users
       - The userdel command is used to delete a user from the system.
       - It also takes in an optional -r parameter that also deletes the home directory.

       Example:
            userdel muvaka - Deletes user named muvaka from the system.


       Note: To modify/change a users password, we use the passwd command followed by the name of
             the user.

             USER GROUPS
       - a user group is a list of users
       - Groups are stored in the /etc/group file.
       - They are good for issuing similar permission rules to a set of users.

       groupadd ec2-user - the groupadd command is used to create a new group.
       groupmod -n ec2-users ec3-users - The groupmod -n command takes in two arguments
                   1. the new name of the group.
                   2. The old name of the group.
       groupdel ec3-users - Deletes a group known as ec3-users from the system.

                   Adding users in a group.
       - You can add an user using two methods:
            1. gpasswd - takes in an option and two argument
                        option: -a
                        argument1: name of user being added
                        argument2: name of the group

              Example:
                 -d - deletes a user from a group

                 Example: gpasswd -d muvaka ec3-users - deletes a user known as muvaka from ec3-users group.
                 -m - add a list of members to the group
                 -a sets the administrators in the group.


              gpasswd -a muvaka ec2-users
            2. - You can modify the user by adding him to a group using the usermod command
               - Also takes in an option and two arguments.
               option: -a or -aG - The latter modifies the user without removing him from his previous groups.
               argument1: name of the group,groups the user is being added into.
               argument2: name of the user being modified

                Example:
                    usermod -a -G hr muvaka - adds a user known as muvaka in the hr group without removing him from his previous groups.



       USER-PERMISSIONS
    - There are two types of users in the system.
        1. The root user
        2. A standard user
        - The root user has all the permissions in the system
        - The standard user has permissions on files he creates or the ones he's granted permission to work on.

        Note: The root user is always denoted by an # sign after the prompt while a standard user is denoted by a $ sign.
              It is good to login as a standard user and then elevate yourself to the permissions you need.
              delete / can be run by the root to erase the whole system.

        SWITCHING BETWEEN USERS
        1. Sudo - gives you full privileges in the system.
        2. Su - Can be used to log in a different existing user in the machine
            su muvaka - It will prompt you the password of the user.
        NOTE: The sudoers file contains a list of users with permissions to run commands
                that require root rights
                - When a root command is executed the log is stored in the secure file
                    stored in the log directory inside the var
                            /var/log/secure
             - It is better to use sudo than su since the sudo command doesn't the user password when used
             - You can run sudo -LU <username> to view all the permissions dedicated to a certain user.

             Differences between the su and sudo command
             - The su command activates full privileges and permissions in the system while the sudo command only activates
                a specific administrative command to be used by the user.
             - su command prompts users for their password while the sudo doesn't

             AWS IDENTITY AND ACCESS MANAGEMENT
- IAM is an AWS service that is used to manage users and access to resources in the cloud.
- It can be accessed using:
        1. AWS management console - A web interface via the browser
        2. Command Line Interface - Terminal accessible via Linux or windows' systems.
        3. AWS Software Development Kits.
- It provides access to individual who can manage resources in the AWS cloud.
- A policy should be attached to a user defining the permission he has been granted.



        Editing Files in linux
- Most configuration files are documented in text files.
- You can use the graphical user interface or command line interface to edit them.
- The commonly used editor is called THE VIM editor( used in the command line).
- it is also known as vi based on the linux distro one is using.
- It uses two modes in editing a file.
        1. Command mode - A set of commands to instruct what to do.
        2. Insert mode - Writing the file.
            NOTE: While in the insert mode you cant execute commands.
                You can type the esc key to shift between the two modes.

        Common commands used in vim
        Command      Use
           x      -  Removes a character in the file. The cursor removes the character that is below it.
           G      - Moves the cursor on the bottom of the file.
           gg     - Moves the cursor at the top of the page
           42/G   - Moves the cursor at the 42 line of the file.
         /keyword - Searches for a certain keyword in the file.
            p     - pastes a character in the file.
            y     - cuts a character from the file.
            i     - Enters in insert mode.
            a     - Enters in the insert mode.
            hjkl  - Are used to move the cursor while in the command mode.
            :q!   - Exits the vim editor without saving any change made in the file.
            :wq   - Exits the vim editor while saving the current changes.

            DELETING commands
            - dw - deletes from where the cursor is placed to the beginning of the new word.
            - de - deletes from where the cursor is placed to the end of the current word.
            - dd - deletes the whole line.
            - d$ - deletes the whole sentence.

            UNDO commands
            - u - undoes the recent fix.
            - U - makes the file to be how it was.